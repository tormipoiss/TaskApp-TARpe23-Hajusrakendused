{
    "swagger": "2.0",
    "info": {
        "title": "Tasks API",
        "version": "1.0",
        "description": "### This is a Swagger UI for our Tasks API  \n\n### Error handling\nErrors are presented using the HTTP status codes 400-599. The response include a more detailed explanation about the error in the body.\n\n```\n{\n  \"error\": \"Cleartext explanation of the error that occurred\"\n}\n```\n\n### Generic API errors\nThese error responses can be returned by any of the described endpoints.\n\n| HTTP status  |  Description |\n|---|---|\n| 400| Bad input parameters or invalid request. More information can be found in the response body.\n| 401| The consumer does not have access to the requested resource or the provided token is not valid.\n| 404| The requested resource can not be found or the user does not have access to the resource.\n| 5XX| A server error has occurred while processing the request."
    },
    "basePath": "/api/v1",
    "paths": {
        "/tasks": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "responses": {
                    "200": {
                        "description": "Return list of all Tasks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TaskListItem"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": 35,
                                    "title": "some text"
                                },
                                {
                                    "id": 43,
                                    "title": "some text"
                                }
                            ]
                        }
                    }
                },
                "summary": "Get all tasks"
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "description": "Task to be created - without ID",
                        "schema": {
                            "$ref": "#/definitions/NewTask"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created task",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        },
                        "examples": {
                            "application/json": {
                                "id": 94,
                                "username": "some text",
                                "title": "some text",
                                "description": "some text",
                                "deadline": "2018-02-10T09:30Z"
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Missing required fields or malformed deadline date",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Missing required fields / malformed deadline"
                            }
                        }
                    }
                },
                "summary": "Create a task"
            }
        },
        "/tasks/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "responses": {
                    "200": {
                        "description": "Return the requested Task details",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        },
                        "examples": {
                            "application/json": {
                                "id": 36,
                                "username": "some text",
                                "title": "some text",
                                "description": "some text",
                                "deadline": "2018-02-10T09:30Z"
                            }
                        }
                    },
                    "400": {
                        "description": "Url does not contain ID",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        },
                        "examples": {
                            "application/json": {
                                "error": "URL does not contain ID"
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Task not found"
                            }
                        }
                    }
                },
                "summary": "Get a task"
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "description": "Task with data to be updated",
                        "schema": {
                            "$ref": "#/definitions/NewTask"
                        },
                        "in": "body",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task updated",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        },
                        "examples": {}
                    },
                    "400": {
                        "description": "URL does not contain ID or missing required fields or malformed deadline date",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        },
                        "examples": {
                            "application/json": {
                                "error": "URL does not contain ID / Missing required fields / malformed deadline"
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Task not found"
                            }
                        }
                    }
                },
                "summary": "Update task with given values"
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "responses": {
                    "204": {
                        "description": "Task deleted"
                    },
                    "400": {
                        "description": "URL does not contain ID",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        },
                        "examples": {
                            "application/json": {
                                "error": "URL does not contain ID"
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        },
                        "examples": {
                            "application/json": {
                                "error": "Task not found"
                            }
                        }
                    }
                },
                "summary": "Delete a task"
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "number"
                }
            ]
        }
    },
    "definitions": {
        "Task": {
            "title": "Root Type for Task",
            "description": "",
            "required": [
                "description",
                "id",
                "title",
                "username"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "deadline": {
                    "format": "date-time",
                    "type": "string"
                }
            },
            "example": {
                "id": 1,
                "username": "Tiit",
                "title": "Task",
                "description": "Uus hea task",
                "deadline": "2025-11-18T00:00:00.000Z"
            }
        },
        "Error": {
            "title": "Root Type for Error",
            "description": "",
            "required": [
                "error"
            ],
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            },
            "example": {
                "error": "Error message"
            }
        },
        "NewTask": {
            "title": "Root Type for Task",
            "description": "",
            "required": [
                "username",
                "title",
                "description"
            ],
            "type": "object",
            "properties": {
                "username": {
                    "description": "",
                    "type": "string"
                },
                "title": {
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "description": "",
                    "type": "string"
                },
                "deadline": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                }
            },
            "example": {
                "username": "Tiit",
                "title": "Task",
                "description": "Uus hea task",
                "deadline": "2025-11-18T00:00:00.000Z"
            }
        },
        "TaskListItem": {
            "title": "Root Type for TaskListItem",
            "description": "",
            "required": [
                "id",
                "title"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            },
            "example": {
                "id": 1,
                "title": "Task"
            }
        }
    }
}